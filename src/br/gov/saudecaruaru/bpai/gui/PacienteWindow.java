/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.gov.saudecaruaru.bpai.gui;


import br.gov.saudecaruaru.bpai.business.model.*;
import br.gov.saudecaruaru.bpai.gui.tablemodel.PacienteTableModel;
import br.gov.saudecaruaru.bpai.gui.formatter.*;
import br.gov.saudecaruaru.bpai.gui.interfaces.PacienteView;
import com.towel.bind.Binder;
import com.towel.bind.annotation.AnnotatedBinder;
import com.towel.bind.annotation.Bindable;
import com.towel.bind.annotation.Form;
import com.towel.swing.combo.ObjectComboBoxModel;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionListener;
import java.awt.event.FocusListener;
import java.awt.event.KeyListener;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.*;
import javax.swing.table.TableColumnModel;
import javax.swing.text.Document;

/**
 *
 * @author juniorpires
 */
@Form(BIPaciente.class)
public class PacienteWindow extends javax.swing.JFrame implements PacienteView,Observer{
    private Binder binder;
    /**
     * Creates new form PacienteWindow
     */
    public PacienteWindow() {
      initComponents();
      initInstances();  
      this.initMyComponents();
    }

     private void initMyComponents(){
         
        this.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        this.initInstances();
        
        modelEscolha = new ObjectComboBoxModel<Character>();


        modelEscolha.setFormatter(new EscolhaFormatter());
     

        List<Character> lis= new ArrayList<Character>();
        lis.add(new Character('S'));
        lis.add(new Character('N'));
        modelEscolha.setData(lis);
        
        jCbalfabetizado.setModel(modelEscolha);
        
        this.jDtCDataNascimento.setDateFormatString("dd/MM/yyyy");
        
        this.jListDoencaCondicao.setModel(listModel); 
        this.jListDoencaCondicao2.setModel(listModel2); 
          //  listModel.addElement(new BIDoencaCondicao("ALC", "Alcool"));
      
       
       
        
    }
     
    private void initInstances(){
        //centralizarÃ¡ a tela
        this.setLocationRelativeTo(null);
        this.binder=new AnnotatedBinder(this);
        this.listModel = new DefaultListModel();
        this.listModel2 = new DefaultListModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTxtCns = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jCbalfabetizado = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTxtNome = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTxtIdade = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTxtSexo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTxtOcupacao = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTxtFamilia = new javax.swing.JTextField();
        jBtFamilia = new javax.swing.JButton();
        jBtNovo = new javax.swing.JButton();
        jBtEditar = new javax.swing.JButton();
        jBtConfirmar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTbPacientes = new javax.swing.JTable();
        jDtCDataNascimento = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListDoencaCondicao = new javax.swing.JList();
        jBtDoencaCondicao = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListDoencaCondicao2 = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("CNS: ");

        jLabel2.setText("Alfabetizado: ");

        jCbalfabetizado.setModel(new DefaultComboBoxModel(new String[]{"Sim","Não"}));
        jCbalfabetizado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbalfabetizadoActionPerformed(evt);
            }
        });

        jLabel3.setText("Data Nascimento: ");

        jLabel4.setText("Nome: ");

        jLabel5.setText("Idade: ");

        jLabel6.setText("Sexo: ");

        jLabel7.setText("Ocupação: ");

        jLabel8.setText("Doença ou Condição Referida: ");

        jLabel9.setText("Familia: ");

        jBtFamilia.setText("...");

        jBtNovo.setText("Novo");

        jBtEditar.setText("Editar");

        jBtConfirmar.setText("Confirmar");

        jBtCancelar.setText("Cancelar");

        jTbPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTbPacientes);

        jScrollPane2.setViewportView(jListDoencaCondicao);

        jBtDoencaCondicao.setText("<<");

        jScrollPane3.setViewportView(jListDoencaCondicao2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(28, 28, 28)
                        .addComponent(jTxtNome))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTxtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDtCDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jTxtIdade, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addComponent(jBtNovo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jBtEditar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jBtConfirmar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jBtCancelar))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(35, 35, 35)
                                        .addComponent(jTxtCns, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTxtOcupacao, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTxtFamilia, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jBtFamilia))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jBtDoencaCondicao)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(73, 73, 73)))
                        .addComponent(jCbalfabetizado, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTxtCns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTxtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDtCDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jTxtIdade)
                        .addComponent(jLabel6)
                        .addComponent(jTxtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jCbalfabetizado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTxtOcupacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jTxtFamilia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtFamilia))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtDoencaCondicao)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtNovo)
                            .addComponent(jBtEditar)
                            .addComponent(jBtConfirmar)
                            .addComponent(jBtCancelar))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCbalfabetizadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbalfabetizadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCbalfabetizadoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PacienteWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PacienteWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PacienteWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PacienteWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new PacienteWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtConfirmar;
    private javax.swing.JButton jBtDoencaCondicao;
    private javax.swing.JButton jBtEditar;
    private javax.swing.JButton jBtFamilia;
    private javax.swing.JButton jBtNovo;
    @Bindable(field="alfabetizado",formatter=EscolhaFormatter.class)
    private javax.swing.JComboBox jCbalfabetizado;
    private com.toedter.calendar.JDateChooser jDtCDataNascimento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jListDoencaCondicao;
    private javax.swing.JList jListDoencaCondicao2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTbPacientes;
    @Bindable(field="cns")
    private javax.swing.JTextField jTxtCns;
    @Bindable(field="familia.id",formatter=IntFormatter.class)
    private javax.swing.JTextField jTxtFamilia;
    @Bindable(field="idade",formatter=IntFormatter.class)
    private javax.swing.JTextField jTxtIdade;
    @Bindable(field="nome")
    private javax.swing.JTextField jTxtNome;
    @Bindable(field="codigoOcupacao")
    private javax.swing.JTextField jTxtOcupacao;
    @Bindable(field="sexo",formatter=CharFormatter.class)
    private javax.swing.JTextField jTxtSexo;
    // End of variables declaration//GEN-END:variables
    private ObjectComboBoxModel<Character> modelEscolha;
    private DefaultListModel listModel;
    private DefaultListModel listModel2;
    

    
    
    @Override
    public int getSelectedListDoencaCondicao2(){
       return  this.jListDoencaCondicao2.getSelectedIndex();
    }
    
    @Override
    public int getSelectedListDoencaCondicao(){
       return  this.jListDoencaCondicao.getSelectedIndex();
    }
    
    
   
    
    @Override
    public void changeVisibleListDoencaCondicao2(){
        if(this.jListDoencaCondicao2.isVisible()){
            this.jListDoencaCondicao2.setVisible(false);
        }else{
            this.jListDoencaCondicao2.setVisible(true);
        }
    }
    
    @Override
    public void setListDoencaCondicao2MouseListener(MouseListener listener){
        this.jListDoencaCondicao2.addMouseListener(listener);
    }
    
    
    @Override
    public void removeItemDoencaCondicao(Object item){
        this.listModel.removeElement(item);
    }
    
    @Override
    public DefaultListModel getModelListDoencaCondicao(){
        return this.listModel;
    }
    @Override
    public DefaultListModel getModelListDoencaCondicao2(){
        return this.listModel2;
    }
    
    public void clearListDoencaCondicao(){
        this.listModel.removeAllElements();
    }
    @Override
    public void setCodigoOcupacao(String codigo){
        this.jTxtOcupacao.setText(codigo);
    }
    @Override
    public boolean validaCamposVazios() {
      boolean verifica = false;   
      Component[] componentes = this.getContentPane().getComponents();  
        for (int i = 0; i < componentes.length; i++) {  
            if (componentes[i] instanceof JTextField) {  
                JTextField field = (JTextField)componentes[i];  
                field.setBackground(Color.white);
                
                //se o campo estiver vazio colore o campo de vermelho
                if(field.getText().equals("")){
                   //field.requestFocusInWindow();
                   field.setBackground(Color.red);
                   verifica  = true;
                   
                }  
            }else{
                        if (componentes[i] instanceof JComboBox) {  
                            JComboBox fieldC = (JComboBox)componentes[i];
                            fieldC.setBackground(Color.gray);
                            //se o campo estiver vazio colore o campo de vermelho
                            if(fieldC.getSelectedItem().equals("")){
                                //fieldC.requestFocusInWindow();
                                fieldC.setBackground(Color.red);
                                verifica  = true;
                        }
                }
                    
            }  
            
             
        }
        if(verifica){
            return false;
        }
        return true;
    }
        
    @Override
    public String getCns(){
        return this.jTxtCns.getText();
    }
//    @Override
//    public String getDataNascimento(){
//        return this.jTxtDataNascimento.getText().replaceAll("[/]","");
//    }
    
    @Override
    public Date getDataNascimento(){
        return this.jDtCDataNascimento.getDate();
    }
    
    @Override
    public void setDataNascimento(Date dataNascimento){
        this.jDtCDataNascimento.setDate(dataNascimento);
    }
    
    @Override
    public void setIdade(String idade){
        this.jTxtIdade.setText(idade);
    }
    
    @Override
    public void setIdade(int idade){
        this.jTxtIdade.setText(String.valueOf(idade));
    }
    @Override
    public void setSelecionarLinhaJTableActionListener(MouseListener listener) {
        this.jTbPacientes.addMouseListener(listener);
    }
    
    @Override
    public void setCodigoOcupacaoKeyListener(KeyListener listener){
        this.jTxtOcupacao.addKeyListener(listener);
    }
    @Override
    public void setListDoencaCondicaoKeyListener(KeyListener listener){
        this.jListDoencaCondicao.addKeyListener(listener);
    }
    @Override
    public void setDataNascimentoFocusListener(FocusListener listener){
        this.jDtCDataNascimento.addFocusListener(listener);
    }
    @Override
    public void setIdadeFocusListener(FocusListener listener){
        this.jTxtIdade.addFocusListener(listener);
    }
    @Override
    public void editableIdade(boolean arg){
        this.jTxtIdade.setEditable(arg);
    }

    @Override
    public void clearFields() {
      Component[] componentes = this.getContentPane().getComponents();  
          
        for (int i = 0; i < componentes.length; i++) {  
            if (componentes[i] instanceof JTextField) {  
                JTextField field = (JTextField)componentes[i];  
                field.setText("");  
            }  
        }  
        //limpa a lista de doencaCondicao
        this.clearListDoencaCondicao();
    }

    @Override
    public void packAndShow() {
        this.pack();  
        this.setVisible(true);  
    }

    @Override
    public PacienteTableModel getPacienteTableModel() {
       return (PacienteTableModel) this.jTbPacientes.getModel();
    }

    @Override
    public void setPacienteTableModel(PacienteTableModel model) {
        this.jTbPacientes.setModel(model);
        
        // Configura as colunas da JTable  
        TableColumnModel columnModel = this.jTbPacientes.getColumnModel();  
          
        
        columnModel.getColumn(0).setHeaderValue("Cns");  
        columnModel.getColumn(0).setPreferredWidth(200);  
          
        columnModel.getColumn(1).setHeaderValue("Nome");  
        columnModel.getColumn(1).setPreferredWidth(200);  
        
        columnModel.getColumn(2).setHeaderValue("FamÃ­lia");  
        columnModel.getColumn(2).setPreferredWidth(200);  
        
    }

    @Override
    public int linhaSelecionadaTablePacientes() {
      return this.jTbPacientes.getSelectedRow();
    }

    @Override
    public void refreshTablePacientes() {
        this.jTbPacientes.updateUI();
    }

    @Override
    public void setVerifiers() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void setDocuments() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public Binder getBinder() {
       return this.binder;
    }


    @Override
    public void enableTxtCns(boolean arg) {
       this.jTxtCns.setEnabled(arg);
    }

    @Override
    public void enableTxtNome(boolean arg) {
        this.jTxtNome.setEnabled(arg);
    }

    @Override
    public void enableTxtIdade(boolean arg) {
       this.jTxtIdade.setEnabled(arg);
    }

    @Override
    public void enableTxtSexo(boolean arg) {
     this.jTxtSexo.setEnabled(arg);
    }

    @Override
    public void enableJCbAlfabetizado(boolean arg) {
       this.jCbalfabetizado.setEnabled(arg);
    }

    @Override
    public void enableTxtDataNascimento(boolean arg) {
       this.jDtCDataNascimento.setEnabled(arg); 
    }

    @Override
    public void enableTxtOcupacao(boolean arg) {
        this.jTxtOcupacao.setEnabled(arg);
    }

    @Override
    public void enableTxtFamilia(boolean arg) {
       this.jTxtFamilia.setEnabled(arg);
    }

  

  @Override
    public void enableBtnNovo(boolean arg) {
       this.jBtNovo.setEnabled(arg);
    }

    @Override
    public void enableBtnEditar(boolean arg) {
       this.jBtEditar.setEnabled(arg);
    }

    @Override
    public void enableBtnConfirmar(boolean arg) {
       this.jBtConfirmar.setEnabled(arg);
    }

    @Override
    public void enableBtnCancelar(boolean arg) {
        this.jBtCancelar.setEnabled(arg);
    }
    
    @Override
    public void enableBtnDoencaCondicao(boolean arg) {
        this.jBtDoencaCondicao.setEnabled(arg);
    }
    @Override
    public void enableListDoencaCondicao(boolean arg) {
        this.jListDoencaCondicao.setEnabled(arg);
    }
    
    @Override
    public void enableListDoencaCondicao2(boolean arg) {
        this.jListDoencaCondicao2.setEnabled(arg);
    }
    
    @Override
    public void enableBtnFamilia(boolean arg) {
        this.jBtFamilia.setEnabled(arg);
    }

    @Override
    public void setNovoActionListener(ActionListener listener) {
        this.jBtNovo.addActionListener(listener);
    }
    
     @Override
    public void setDoencaCondicaoActionListener(ActionListener listener) {
        this.jBtDoencaCondicao.addActionListener(listener);
    }


    @Override
    public void setEditarActionListener(ActionListener listener) {
        this.jBtEditar.addActionListener(listener);
    }

    @Override
    public void setConfirmarActionListener(ActionListener listener) {
       this.jBtConfirmar.addActionListener(listener);
    }

    @Override
    public void setCancelarActionListener(ActionListener listener) {
        this.jBtCancelar.addActionListener(listener);
    }
    
    @Override
    public void setFamiliaActionListener(ActionListener listener) {
        this.jBtFamilia.addActionListener(listener);
    }

    @Override
    public Character getAlfabetizado() {
        return this.jCbalfabetizado.getSelectedItem().toString().charAt(0);
    }

    @Override
    public Integer getIdFamilia() {
        return Integer.parseInt(this.jTxtFamilia.getText());
    }
    
    @Override
    public void setSelectedAlfabetizado(Character c){
        this.modelEscolha.setSelectedObject(c);
    }
    
    
    @Override
    public void setSelectedIndexAlfabetizado(int i){
        this.jCbalfabetizado.setSelectedIndex(i);
    }
    
    
    @Override
    public void setTxtCnsDocument(Document d){
        this.jTxtCns.setDocument(d);
    }
    @Override
    public void setTxtNomeDocument(Document d){
        this.jTxtNome.setDocument(d);
    }
    @Override
    public void setTxtIdadeDocument(Document d){
        this.jTxtIdade.setDocument(d);
    }
    @Override
    public void setTxtSexoDocument(Document d){
        this.jTxtSexo.setDocument(d);
    }
    @Override
    public void setTxtOcupacaoDocument(Document d){
        this.jTxtOcupacao.setDocument(d);
    }
    
    
    @Override
    public void setTxtCnsVerifier(InputVerifier verifier){
        this.jTxtCns.setInputVerifier(verifier);
    }
    
    
    @Override
    public void update(Subject sub, Object arg) {
        if(arg!=null){
            if(arg instanceof Integer){
                //atualiza o valor do campo com o valor vindo do observado
                this.jTxtFamilia.setText(String.valueOf(arg));
            }
        }
    }

    
    @Override
    public void setCnsFocusListener(FocusListener listener){
        this.jTxtCns.addFocusListener(listener);
    }

  
}
